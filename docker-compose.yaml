
services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    links:
      - db
    environment:
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - CELERY_BACKEND=${CELERY_BROKER_URL}
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/${POSTGRES_DB}
    env_file:
      - .env
    stdin_open: true
    tty: true
    networks:
      - rider_network

  db:
    image: postgis/postgis:13-3.1
    container_name: rider_postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - rider_network

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A CORE.celery worker -l info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    links:
      - web
      - redis
    networks:
      - rider_network
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    env_file:
      - .env

  # celery_beat:
  #   build: .
  #   command:
  #     [
  #       'celery',
  #       '--app=CORE',
  #       'beat',
  #       '--scheduler=django_celery_beat.schedulers:DatabaseScheduler',
  #       '--loglevel=INFO',
  #     ]
  #   volumes:
  #     - ./:/app
  #   networks:
  #     - rider_network
  #   links:
  #     - web
  #     - db
  #     - redis
  #   depends_on:
  #     - web
  #     - db
  #     - redis
  #   environment:
  #     - CELERY_BROKER_URL=${CELERY_BROKER_URL}
  #   env_file:
  #     - .env

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025

volumes:
  postgres_data:
  redis_data:

networks:
  rider_network:
    driver: bridge
