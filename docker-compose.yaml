
services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - CELERY_BACKEND=${CELERY_BROKER_URL}
    env_file:
      - .env
    stdin_open: true
    tty: true
    networks:
      - pay_network

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A CORE.celery worker -l info
    volumes:
      - .:/app
    depends_on:
      - web
      - redis
    links:
      - web
      - redis
    networks:
      - pay_network
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    env_file:
      - .env

  celery_beat:
    build: .
    command:
      [
        'celery',
        '--app=CORE',
        'beat',
        '--scheduler=django_celery_beat.schedulers:DatabaseScheduler',
        '--loglevel=INFO',
      ]
    volumes:
      - ./:/app
    networks:
      - pay_network
    links:
      - web
      - redis
    depends_on:
      - web
      - redis
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    env_file:
      - .env

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025
      - 8025:8025

volumes:
  postgres_data:
  redis_data:

networks:
  pay_network:
    driver: bridge
